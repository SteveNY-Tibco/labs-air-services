{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/log",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/graphbuilder/builder",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/graphbuilder/dgraphupsert",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/labs-air-contrib/trigger/mqtt",
		"github.com/project-flogo/contrib/function/coerce"
    ],
    "name": "IoTNotification_MQTT_Dgraph",
    "description": " ",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "triggers": [
		{
			"id": "MQTTSubscriber",
			"name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
			"ref": "github.com/TIBCOSoftware/labs-air-contrib/trigger/mqtt",
			"settings": {
				"broker" : "=$property[\"Mqtt.IoTMQTT.Broker_URL\"]",
				"id": "=$property[\"Mqtt.IoTMQTT.ID\"]",
				"keepAlive": 30,
				"store": ":memory:",
				"autoReconnect": true,
				"cleanSession": true,
				"username": "=$property[\"Mqtt.IoTMQTT.Username\"]",
				"password": "=$property[\"Mqtt.IoTMQTT.Password\"]"
			},
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "=$property[\"MQTTTrigger.Topic\"]",
                        "qos": "=$property[\"MQTTTrigger.MaximumQOS\"]",
                        "deserializer": "JSON"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ProcessNotification"
                        },
                        "input": {
                            "body": "=$.content"
                        }
                    },
                    "name": "ProcessNotification"
                }
            ]
		}
    ],
    "resources": [
        {
            "id": "flow:ProcessNotification",
            "data": {
                "name": "ProcessNotification",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "MappingValue",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "MappingValue",
                        "to": "BuildGraph",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "BuildGraph",
                        "to": "DgraphUpsert",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "DgraphUpsert",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=coerce.toString($flow.body)"
                            }
                        }
                    },
                    {
                        "id": "MappingValue",
                        "name": "MappingValue",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"Value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "Value": "=air.airdataselector(null, $flow.body, null, array.get(array.create(\"@f1..objectValue@\", \"@f1..binaryValue@\", \"@f1..value@\"),air.airfirsttrue($flow.body, air.json2object(\"[{\\\"valueType\\\":\\\"Object\\\"}, {\\\"valueType\\\":\\\"Binary\\\"}]\"))))"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "BuildGraph",
                        "name": "BuildGraph",
                        "description": "This activity build graph from incoming data",
                        "activity": {
                            "ref": "#builder",
                            "settings": {
                                "GraphModel": {
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-graph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Graph",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/labs-air-contrib/connector/graph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Name",
                                                "description": "Name of the graph"
                                            },
                                            "value": "IoTNotificationGraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Graph description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "modelSource",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Source",
                                                "description": "Where the model stored",
                                                "type": "string"
                                            },
                                            "allowed": [
                                                "Local File",
                                                "TGDB"
                                            ],
                                            "value": "Local File"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Server URL",
                                                "description": "URL to the model server, ex. http://localhost:9999/tgdb/metadata",
                                                "type": "string",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "model",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Model",
                                                "description": "Define nodes and entities for a graph",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".tgbm",
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": {
                                                "filename": "IotNotificationModel.json",
                                                "content": "data:application/json;base64,ewoJIm5vZGVzIjogWwoJCXsKCQkJIm5hbWUiOiAibm90aWZpY2F0aW9uIiwKCQkJImtleSI6IFsKCQkJCSJ1dWlkIgoJCQldLAoJCQkiYXR0cmlidXRlcyI6IFsKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImNyZWF0ZWQiLAoJCQkJCSJ0eXBlIjogIkxvbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm5vdGlmeVNvdXJjZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJub3RpZnlEZXZpY2UiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibm90aWZ5UmVzb3VyY2UiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidmFsdWUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiZGVzY3JpcHRpb24iLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibm90aWZ5TGV2ZWwiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibm90aWZpY2F0aW9uIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInR5cGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0KCQkJXQoJCX0sCgkJewoJCQkibmFtZSI6ICJnYXRld2F5IiwKCQkJImtleSI6IFsKCQkJCSJ1dWlkIgoJCQldLAoJCQkiYXR0cmlidXRlcyI6IFsKCQkJCXsKCQkJCQkibmFtZSI6ICJnYXRld2F5IiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInVybCIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImxhdGl0dWRlIiwKCQkJCQkidHlwZSI6ICJEb3VibGUiCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImxvbmdpdHVkZSIsCgkJCQkJInR5cGUiOiAiRG91YmxlIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJjcmVhdGVkdHMiLAoJCQkJCSJ0eXBlIjogIkxvbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInVwZGF0ZWR0cyIsCgkJCQkJInR5cGUiOiAiTG9uZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfQoJXSwKCSJlZGdlcyI6IFsKCQl7CgkJCSJ0byI6ICJub3RpZmljYXRpb24iLAoJCQkibmFtZSI6ICJnYXRld2F5X25vdGlmaWNhdGlvbiIsCgkJCSJmcm9tIjogImdhdGV3YXkiLAoJCQkiZGlyZWN0aW9uIjogMgoJCX0KCV0KfQo="
                                            }
                                        },
                                        {
                                            "name": "metadata",
                                            "type": "string",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": "{\n\t\"nodes\": [\n\t\t{\n\t\t\t\"name\": \"notification\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"created\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"notifySource\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"notifyDevice\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"notifyResource\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"notifyLevel\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"notification\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"gateway\",\n\t\t\t\"key\": [\n\t\t\t\t\"uuid\"\n\t\t\t],\n\t\t\t\"attributes\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"gateway\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"url\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"uuid\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"latitude\",\n\t\t\t\t\t\"type\": \"Double\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"longitude\",\n\t\t\t\t\t\"type\": \"Double\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"createdts\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"updatedts\",\n\t\t\t\t\t\"type\": \"Long\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\"type\": \"String\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"edges\": [\n\t\t{\n\t\t\t\"to\": \"notification\",\n\t\t\t\"name\": \"gateway_notification\",\n\t\t\t\"from\": \"gateway\",\n\t\t\t\"direction\": 2\n\t\t}\n\t]\n}\n"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder/connector/graph/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder",
                                        "visible": true,
                                        "smallIcon": "graph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1622575607651,
                                    "createdTime": 1622575607651,
                                    "user": "flogo",
                                    "subscriptionId": "flogo_sbsc",
                                    "id": "4ea84b30-c30f-11eb-9b35-53ae34097570",
                                    "connectorName": "IoTNotificationGraph",
                                    "connectorDescription": " "
                                },
                                "AllowNullKey": false,
                                "BatchMode": false,
                                "PassThrough": "",
                                "Multiinstances": ""
                            },
                            "input": {
                                "Nodes": {
                                    "mapping": {
                                        "notification": {
                                            "notifySource": "=$flow.body.source",
                                            "notifyDevice": "=$flow.body.device",
                                            "notifyResource": "=$flow.body.resource",
                                            "value": "=air.ternary(\"Binary\"==$flow.body.valueType||\"Object\"==$flow.body.valueType, air.tobase64string($activity[MappingValue].Data.Value), $activity[MappingValue].Data.Value)",
                                            "notification": "notification",
                                            "uuid": "=$flow.body.uuid",
                                            "created": "=$flow.body.created",
                                            "description": "=$flow.body.description",
                                            "notifyLevel": "=$flow.body.level",
                                            "type": "notification"
                                        },
                                        "gateway": {
                                            "gateway": "gateway",
                                            "uuid": "=$flow.body.gateway",
                                            "type": "gateway"
                                        }
                                    }
                                },
                                "Edges": {
                                    "mapping": {
                                        "gateway_notification": {
                                            "vertices": {
                                                "from": "=$flow.body.gateway",
                                                "to": "=$flow.body.uuid"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DgraphUpsert",
                        "name": "DgraphUpsert",
                        "description": "This activity upsert to Dgraph",
                        "activity": {
                            "ref": "#dgraphupsert",
                            "settings": {
                                "dgraphConnection": {
                                    "id": "1be74d80-5403-11ea-a293-73298142a997",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-dgraph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Dgraph Connector",
                                    "description": "This is Dgraph connector",
                                    "ref": "github.com/TIBCOSoftware/labs-air-contrib/connector/dgraph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "description": "Name of the connection"
                                            },
                                            "value": "IoTDgraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "apiVersion",
                                            "type": "string",
                                            "required": true,
                                            "allowed": [
                                                "v200"
                                            ],
                                            "display": {
                                                "name": "API Version",
                                                "description": "Dgraph dgo API Version",
                                                "type": "string"
                                            },
                                            "value": "v200"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Dgraph Server URL",
                                                "description": "Dgraph server URL ex. localhost:9080",
                                                "type": "string",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Dgraph_Server_URL\"]"
                                        },
                                        {
                                            "name": "tlsEnabled",
                                            "type": "boolean",
                                            "display": {
                                                "name": "TLS Enabled",
                                                "description": "Will use tls connection"
                                            },
                                            "value": false,
                                            "required": true
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "display": {
                                                "name": "Username",
                                                "description": "Username for login to Dgraph server",
                                                "type": "string",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Username\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "description": "Password for login to Dgraph server",
                                                "type": "password",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Password\"]"
                                        },
                                        {
                                            "name": "tls",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "TLS Configuration",
                                                "description": "Configuration file for TLS",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schemaGen",
                                            "type": "string",
                                            "display": {
                                                "name": "Schema Generation",
                                                "description": "How to generate schema"
                                            },
                                            "value": "no",
                                            "allowed": [
                                                "default",
                                                "file",
                                                "no"
                                            ],
                                            "required": true
                                        },
                                        {
                                            "name": "schema",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Graph Schema",
                                                "description": "Define schema for queries",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".dschema"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": {
                                                "filename": "IotSchema.dschema",
                                                "content": "data:application/octet-stream;base64,ewogICAidXVpZCIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIgICwKICAgICAgICJpbmRleCIgOiBbImV4YWN0IiwgInRlcm0iXQogICB9LAogICAidXJsIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAibGF0aXR1ZGUiIDogewogICAgICAgInR5cGUiICA6ICJmbG9hdCIKICAgfSwKICAgImxvbmdpdHVkZSIgOiB7CiAgICAgICAidHlwZSIgIDogImZsb2F0IgogICB9LAogICAiY3JlYXRlZHRzIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiZGF0ZVRpbWUiCiAgIH0sCiAgICJ1cGRhdGVkdHMiIDogewogICAgICAgInR5cGUiICA6ICJkYXRlVGltZSIKICAgfSwKICAgIm5hbWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJvcGVydGluZ1N0YXRlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiYWRtaW5TdGF0ZSIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIKICAgfSwKICAgImRlc2NyaXB0aW9uIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAidmFsdWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJjcmVhdGVkIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiaW50IiwKICAgICAgICJpbmRleCIgOiBbImludCJdCiAgIH0sCiAgICJnYXRld2F5IiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZGV2aWNlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAicmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJyZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZ2F0ZXdheV9kZXZpY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJkZXZpY2VfcmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJyZXNvdXJjZV9yZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9LAogICAiZ2F0ZXdheV9ydWxlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9Cn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_dgraph/connector/dgraph/connector.json",
                                    "display": {
                                        "description": "This is Dgraph connector",
                                        "category": "GraphBuilder_dgraph",
                                        "visible": true,
                                        "smallIcon": "dgraph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583852319243,
                                    "user": "flogo",
                                    "connectorName": "IoTDgraph",
                                    "connectorDescription": " "
                                },
                                "cacheSize": 1,
                                "readableExternalId": true,
                                "explicitType": true,
                                "typeTag": "type",
                                "attrWithPrefix": false
                            },
                            "input": {
                                "Graph": "=$activity[BuildGraph].Graph"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "retained",
                            "type": "boolean"
                        },
                        {
                            "name": "qos",
                            "type": "integer"
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"created\":{\"type\":\"number\"},\"uuid\":{\"type\":\"string\"},\"source\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"resource\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"objectValue\":{\"type\":\"string\"},\"binaryValue\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"level\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": []
                }
            }
        }
    ],
    "properties": [
        {
            "name": "MQTTTrigger.Topic",
            "type": "string",
            "value": "EdgexGatewayNotification"
        },
        {
            "name": "Mqtt.IoTMQTT.ID",
            "type": "string",
            "value": "<please set unique ID>"
        },
        {
            "name": "MQTTTrigger.MaximumQOS",
            "type": "float64",
            "value": 2
        },
        {
            "name": "Mqtt.IoTMQTT.Broker_URL",
            "type": "string",
            "value": "tcp://localhost:1883"
        },
        {
            "name": "Mqtt.IoTMQTT.Username",
            "type": "string",
            "value": "mqtt_admin"
        },
        {
            "name": "Mqtt.IoTMQTT.Password",
            "type": "string",
            "value": ""
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Dgraph_Server_URL",
            "type": "string",
            "value": "<please set dgraph server URL>"
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Username",
            "type": "string",
            "value": "admin"
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Password",
            "type": "string",
            "value": ""
        }
    ],
    "connections": {}
}